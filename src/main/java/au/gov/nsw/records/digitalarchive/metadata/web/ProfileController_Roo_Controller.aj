// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package au.gov.nsw.records.digitalarchive.metadata.web;

import au.gov.nsw.records.digitalarchive.metadata.model.Profile;
import au.gov.nsw.records.digitalarchive.metadata.model.ProfileCategory;
import au.gov.nsw.records.digitalarchive.metadata.model.ResourceType;
import au.gov.nsw.records.digitalarchive.metadata.model.StandaloneType;
import au.gov.nsw.records.digitalarchive.metadata.model.ValueType;
import au.gov.nsw.records.digitalarchive.metadata.web.ProfileController;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import javax.servlet.http.HttpServletRequest;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect ProfileController_Roo_Controller {
    
    @RequestMapping(params = "form", produces = "text/html")
    public String ProfileController.createForm(Model uiModel) {
        populateEditForm(uiModel, new Profile());
        return "profiles/create";
    }
    
    @RequestMapping(produces = "text/html")
    public String ProfileController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("profiles", Profile.findProfileEntries(firstResult, sizeNo));
            float nrOfPages = (float) Profile.countProfiles() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("profiles", Profile.findAllProfiles());
        }
        addDateTimeFormatPatterns(uiModel);
        return "profiles/list";
    }
    
    void ProfileController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("profile_added_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("profile_lastmodified_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("profile_deprecated_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    void ProfileController.populateEditForm(Model uiModel, Profile profile) {
        uiModel.addAttribute("profile", profile);
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("profiles", Profile.findAllProfiles());
        uiModel.addAttribute("profilecategorys", ProfileCategory.findAllProfileCategorys());
        uiModel.addAttribute("resourcetypes", Arrays.asList(ResourceType.values()));
        uiModel.addAttribute("standalonetypes", Arrays.asList(StandaloneType.values()));
        uiModel.addAttribute("valuetypes", Arrays.asList(ValueType.values()));
    }
    
    String ProfileController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
